{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/calendar/calendar.module.ts","webpack:///./src/app/calendar/components/calendar.component.html","webpack:///./src/app/calendar/components/calendar.component.scss","webpack:///./src/app/calendar/components/calendar.component.ts","webpack:///./src/app/calendar/constants/months.ts","webpack:///./src/app/calendar/models/calendar.ts","webpack:///./src/app/calendar/services/calendar.service.ts","webpack:///./src/app/calendar/services/holiday.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-card>\\n  <form (ngSubmit)=\\\"calendar.refresh()\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar class=\\\"avatar-icon\\\">\\n        <mat-icon>calendar_today</mat-icon>\\n      </div>\\n      <mat-card-title>ProCalendar</mat-card-title>\\n      <mat-card-subtitle>Range Viewer</mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <div>\\n        <div>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Start Date\\\" [(ngModel)]=\\\"startDate\\\" name=\\\"startDate\\\">\\n          </mat-form-field>\\n        </div>\\n        <div>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Range\\\" [(ngModel)]=\\\"range\\\" name=\\\"range\\\">\\n          </mat-form-field>\\n        </div>\\n        <div>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Country Code\\\" [(ngModel)]=\\\"countryCode\\\" name=\\\"countryCode\\\">\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div>\\n        <app-calendar #calendar [startDate]=\\\"startDate\\\" [endDate]=\\\"endDate\\\" [countryCode]=\\\"countryCode\\\"></app-calendar>\\n      </div>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-raised-button type=\\\"submit\\\">Generate Calendar</button>\\n    </mat-card-actions>\\n  </form>\\n</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n\n  public set range(range: string) {\n    this._range = range;\n  }\n  public get range(): string {\n    return this._range;\n  }\n\n  public get endDate(): Date {\n    if (this.startDate && this._range) {\n      const endDate = new Date(this.startDate);\n      endDate.setDate(endDate.getDate() + +this._range);\n      return endDate;\n    }\n    return null;\n  }\n\n  public startDate = '01/13/2019';\n  public countryCode = 'US';\n\n  private _range = '17';\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// Material Imports\nimport {\n  MatCardModule,\n  MatInputModule,\n  MatIconModule,\n  MatButtonModule\n} from '@angular/material';\n\nimport { CalendarModule } from './calendar/calendar.module';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    CalendarModule\n  ],\n  providers: [],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatTooltipModule } from '@angular/material';\r\n\r\nimport {\r\n    CalendarComponent\r\n} from './components/calendar.component';\r\n\r\n@NgModule({\r\n    declarations: [ CalendarComponent ],\r\n    imports: [\r\n        CommonModule,\r\n        MatTooltipModule\r\n    ],\r\n    exports: [ CalendarComponent ],\r\n    providers: [],\r\n})\r\nexport class CalendarModule {}\r\n","module.exports = \"Showing Date Range For {{ startDate }} - {{ endDate }}\\r\\n\\r\\n<table>\\r\\n    <ng-template ngFor let-month [ngForOf]=\\\"calendar\\\">\\r\\n        <thead>\\r\\n            <th>\\r\\n                S\\r\\n            </th>\\r\\n            <th>\\r\\n                M\\r\\n            </th>\\r\\n            <th>\\r\\n                T\\r\\n            </th>\\r\\n            <th>\\r\\n                W\\r\\n            </th>\\r\\n            <th>\\r\\n                T\\r\\n            </th>\\r\\n            <th>\\r\\n                F\\r\\n            </th>\\r\\n            <th>\\r\\n                S\\r\\n            </th>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td colspan=\\\"7\\\" class=\\\"heading\\\">\\r\\n                    {{ months[month.month] }} {{ month.year}}\\r\\n                </td>\\r\\n            </tr>\\r\\n            <ng-template ngFor let-week [ngForOf]=\\\"month.weeks\\\">\\r\\n                <tr>\\r\\n                    <ng-template ngFor let-day [ngForOf]=\\\"week\\\">\\r\\n                        <td [class.weekend]=\\\"day?.isWeekend\\\"\\r\\n                            [class.holiday]=\\\"day?.holidays?.length > 0\\\"\\r\\n                            [class.invalid]=\\\"!day\\\"\\r\\n                            [matTooltip]=\\\"getHolidayList(day)\\\">\\r\\n                            {{ day?.date.getDate() }}\\r\\n                        </td>\\r\\n                    </ng-template>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n        </tbody>\\r\\n    </ng-template>\\r\\n</table>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhbGVuZGFyL2NvbXBvbmVudHMvY2FsZW5kYXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {\r\n    Component,\r\n    Input,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { MONTHS } from '../constants/months';\r\nimport { Calendar, Day } from '../models/calendar';\r\nimport { CalendarService } from '../services/calendar.service';\r\nimport { HolidayService } from '../services/holiday.service';\r\n\r\n@Component({\r\n    selector: 'app-calendar',\r\n    templateUrl: './calendar.component.html',\r\n    styleUrls: ['./calendar.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CalendarComponent {\r\n\r\n    @Input() public set startDate(startDate: string) {\r\n        if (startDate) {\r\n            this._startDate = new Date(startDate);\r\n        }\r\n    }\r\n    public get startDate(): string {\r\n        return `${this._startDate.getMonth() + 1}/${this._startDate.getDate()}/${this._startDate.getFullYear()}`;\r\n    }\r\n\r\n    @Input() public set endDate(endDate: string) {\r\n        if (endDate) {\r\n            this._endDate = new Date(endDate);\r\n        }\r\n    }\r\n    public get endDate(): string {\r\n        return `${this._endDate.getMonth() + 1}/${this._endDate.getDate()}/${this._endDate.getFullYear()}`;\r\n    }\r\n\r\n    @Input() public set countryCode(countryCode: string) {\r\n        if (countryCode) {\r\n            this._countryCode = countryCode;\r\n        }\r\n    }\r\n    public get countryCode(): string {\r\n        return this._countryCode;\r\n    }\r\n\r\n    public get calendar(): Calendar {\r\n        return this._calendar;\r\n    }\r\n\r\n    public months = MONTHS;\r\n\r\n    private _startDate: Date;\r\n    private _endDate: Date;\r\n    private _countryCode: string;\r\n    private _calendar: Calendar;\r\n\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _calendarService: CalendarService,\r\n        private _holidayService: HolidayService\r\n    ) { }\r\n\r\n    public refresh() {\r\n        this._holidayService.requestHolidays('US', this._startDate.getFullYear(), this._endDate.getFullYear()).subscribe((res) => {\r\n            this._calendar = this._calendarService.generateCalendar(this._startDate, this._endDate, res);\r\n            this._changeDetectorRef.detectChanges();\r\n        }, () => {\r\n            console.warn('We were unable to load holidays for the range requested, the will not be displayed.');\r\n            this._calendar = this._calendarService.generateCalendar(this._startDate, this._endDate);\r\n            this._changeDetectorRef.detectChanges();\r\n        });\r\n    }\r\n\r\n    public getHolidayList(day: Day): string {\r\n        if (day && day.holidays && day.holidays.length > 0) {\r\n            return day.holidays.reduce((acc, holiday) => {\r\n                acc = holiday.name + '\\n';\r\n                return acc;\r\n            }, '');\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n","export const MONTHS = [\r\n    'JANUARY',\r\n    'FEBRUARY',\r\n    'MARCH',\r\n    'APRIL',\r\n    'MAY',\r\n    'JUNE',\r\n    'JULY',\r\n    'AUGUST',\r\n    'SEPTEMBER',\r\n    'OCTOBER',\r\n    'NOVEMBER',\r\n    'DECEMBER'\r\n];\r\n","import { Holiday } from './holiday';\r\n\r\nexport type Calendar = Month[];\r\n\r\nexport class Month {\r\n    public month: number;\r\n    public year: number;\r\n    public weeks: Week[] = [];\r\n\r\n    constructor(date: Date) {\r\n        this.month = date.getMonth();\r\n        this.year = date.getFullYear();\r\n    }\r\n}\r\n\r\nexport type Week = Day[];\r\n\r\nexport class Day {\r\n    public get date(): Date {\r\n        return this._date;\r\n    }\r\n\r\n    public holidays: Holiday[] = [];\r\n    public isWeekend = false;\r\n\r\n    private _date: Date;\r\n\r\n    constructor(date: string | number | Date) {\r\n        this._date = new Date(date);\r\n        this._processDateObject(this._date);\r\n    }\r\n\r\n    private _processDateObject(date: Date) {\r\n        if (date.getDay() === 0 || date.getDay() === 6) {\r\n            this.isWeekend = true;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n    Calendar,\r\n    Month,\r\n    Day\r\n} from '../models/calendar';\r\nimport { Holiday } from '../models/holiday';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CalendarService {\r\n\r\n    public generateCalendar(\r\n        startDate: Date,\r\n        endDate: Date,\r\n        holidays?: Holiday[]\r\n    ): Calendar {\r\n        // Ensure our date range is valid\r\n        if (\r\n            !this._isValidDate(startDate)\r\n            || !this._isValidDate(endDate)\r\n            || startDate.getTime() > endDate.getTime()) {\r\n            return [];\r\n        }\r\n        const calendar = this._generateRange(startDate, endDate, holidays);\r\n        return calendar;\r\n    }\r\n\r\n    private _generateRange(\r\n        startDate: Date,\r\n        endDate: Date,\r\n        holidays?: Holiday[]\r\n    ): Calendar {\r\n        // Backing Data Stores for use in the loop\r\n        const calendar = [];\r\n        let activeDate = new Date(startDate);\r\n        let activeWeek = [];\r\n        let activeMonth = new Month(activeDate);\r\n        // Loop through each day between the start and end dates\r\n        while (activeDate <= endDate) {\r\n            // Check if we need to perform left-hand padding to ensure proper position of the start date\r\n            if (activeWeek.length < activeDate.getDay()) {\r\n                activeWeek.push(...new Array(activeDate.getDay()));\r\n            }\r\n            // Create a new Day object to store relevant information for rendering\r\n            const day = new Day(activeDate);\r\n            // Append relevant holidays to the Day\r\n            if (holidays != null) {\r\n                day.holidays = this._getActiveHolidays(day, holidays);\r\n            }\r\n            // Append the Day to the Week\r\n            activeWeek.push(day);\r\n            // Check if the Day will be at the end of the week, or the end of the range\r\n            if (activeDate.getDay() === 6\r\n                || activeDate.getTime() === endDate.getTime()) {\r\n                // Perform right-hand padding where applicable\r\n                if (activeWeek.length < 7) {\r\n                    activeWeek.push(...new Array(7 - activeWeek.length));\r\n                }\r\n                // Append the Week to the Month\r\n                activeMonth.weeks.push(activeWeek);\r\n                activeWeek = [];\r\n            }\r\n            // Move to the next Day in the loop\r\n            activeDate = this._incrementDate(activeDate, 1);\r\n            // Check if the Month or the Year needs to be incremented\r\n            if (activeDate.getMonth() !== activeMonth.month\r\n                || activeDate.getFullYear() !== activeMonth.year) {\r\n                if (activeWeek.length > 0) {\r\n                    // Perform right-hand padding where applicable\r\n                    if (activeWeek.length < 7) {\r\n                        activeWeek.push(...new Array(7 - activeWeek.length));\r\n                    }\r\n                    // Append the Week to the Month\r\n                    activeMonth.weeks.push(activeWeek);\r\n                    activeWeek = [];\r\n                }\r\n                // Append the Month to the Calendar\r\n                calendar.push(activeMonth);\r\n                activeMonth = new Month(activeDate);\r\n            }\r\n        }\r\n        // Append the Month to the Calendar\r\n        calendar.push(activeMonth);\r\n        return calendar;\r\n    }\r\n\r\n    private _incrementDate(\r\n        date: Date,\r\n        count: number\r\n    ): Date {\r\n        // Re-Initialize the date to prevent in-line mutation from the caller\r\n        date = new Date(date);\r\n        date.setDate(date.getDate() + count);\r\n        return date;\r\n    }\r\n\r\n    private _getActiveHolidays(\r\n        day: Day,\r\n        holidays: Holiday[]\r\n    ) {\r\n        holidays = holidays.reduce((acc, holiday) => {\r\n            if (holiday.start.getTime() <= day.date.getTime()\r\n                && holiday.end.getTime() > day.date.getTime()\r\n                && holiday.date.getFullYear() === day.date.getFullYear()) {\r\n                   acc.push(holiday);\r\n            }\r\n            return acc;\r\n        }, []);\r\n        return holidays;\r\n    }\r\n\r\n    private _isValidDate(\r\n        date: any\r\n    ) {\r\n        return date instanceof Date && !isNaN(date as any);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map, tap, timeout } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HolidayService {\r\n\r\n    private _requestCache = {};\r\n\r\n    constructor( private _httpClient: HttpClient ) { }\r\n\r\n    public requestHolidays(\r\n        countryCode: string,\r\n        startYear: number,\r\n        endYear: number\r\n    ): Observable<any> {\r\n        const requests = [];\r\n        let year = startYear;\r\n        let request;\r\n        while (year <= endYear) {\r\n            /* tslint:disable */\r\n            request = `https://www.calendarindex.com/api/v1/holidays?api_key=${environment.holidayApiKey}&country=${countryCode}&year=${year}`;\r\n            /* tslint:enable */\r\n            if (this._requestCache[request] != null) {\r\n                requests.push(of(this._requestCache[request]));\r\n            } else {\r\n                requests.push(this._httpClient.get(request).pipe(\r\n                    tap((res) => {\r\n                        this._requestCache[request] = res;\r\n                    })\r\n                ));\r\n            }\r\n            year += 1;\r\n        }\r\n        return combineLatest(requests).pipe(\r\n            timeout(10000),\r\n            map((holidays) => {\r\n                holidays = holidays.reduce((acc, holidayResponse) => {\r\n                    acc.push(...holidayResponse.response.holidays);\r\n                    return acc;\r\n                }, []);\r\n                return holidays.map((holiday) => {\r\n                    holiday.date = new Date(holiday.date);\r\n                    holiday.start = new Date(holiday.start);\r\n                    holiday.end = new Date(holiday.end);\r\n                    return holiday;\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  holidayApiKey: 'f2c4ba76497625d440fa7cda0fa1e7c45f59094b'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}